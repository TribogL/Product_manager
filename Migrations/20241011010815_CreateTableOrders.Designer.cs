// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product_manager.data;

#nullable disable

namespace Product_manager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241011010815_CreateTableOrders")]
    partial class CreateTableOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Product_manager.models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Owen"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Sharon"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Neil"
                        },
                        new
                        {
                            Id = 4,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Jill"
                        },
                        new
                        {
                            Id = 5,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Iris"
                        },
                        new
                        {
                            Id = 6,
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Josh"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Alberta"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Dixie"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Leigh"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Randy"
                        });
                });

            modelBuilder.Entity("Product_manager.models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direction");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direction = "673 Kuhic Creek, Rauberg, Saint Barthelemy",
                            FullName = "Leland Emard",
                            PhoneNumber = "962-290-6883 x998"
                        },
                        new
                        {
                            Id = 2,
                            Direction = "298 Lindsay Corners, Mackenziehaven, Germany",
                            FullName = "Candice Nienow",
                            PhoneNumber = "763.906.8476 x77079"
                        },
                        new
                        {
                            Id = 3,
                            Direction = "83443 Floy Turnpike, Morarville, Czech Republic",
                            FullName = "Daniel Thiel",
                            PhoneNumber = "(814) 251-2295"
                        },
                        new
                        {
                            Id = 4,
                            Direction = "51188 Ahmed Isle, East Maviston, Jersey",
                            FullName = "Santos Kshlerin",
                            PhoneNumber = "405.246.5452 x7937"
                        },
                        new
                        {
                            Id = 5,
                            Direction = "4777 Heaney Turnpike, Feilborough, Aruba",
                            FullName = "Courtney Klocko",
                            PhoneNumber = "1-548-201-2532 x5361"
                        },
                        new
                        {
                            Id = 6,
                            Direction = "920 Olson Views, Port Joellefurt, Botswana",
                            FullName = "Clara Hilll",
                            PhoneNumber = "418-618-1993 x1904"
                        },
                        new
                        {
                            Id = 7,
                            Direction = "833 Kemmer Hollow, West Minervaberg, Bosnia and Herzegovina",
                            FullName = "Joshua Breitenberg",
                            PhoneNumber = "(508) 663-8490"
                        },
                        new
                        {
                            Id = 8,
                            Direction = "7792 Shemar Rest, Lake Skylarbury, Kiribati",
                            FullName = "Ellen Hayes",
                            PhoneNumber = "(415) 438-7275 x6772"
                        },
                        new
                        {
                            Id = 9,
                            Direction = "295 Labadie Run, West Percyshire, Brunei Darussalam",
                            FullName = "Ricardo Huels",
                            PhoneNumber = "904.832.5993"
                        },
                        new
                        {
                            Id = 10,
                            Direction = "901 Jabari Centers, Jaspershire, Gambia",
                            FullName = "Richard Romaguera",
                            PhoneNumber = "331.233.5385 x5390"
                        });
                });

            modelBuilder.Entity("Product_manager.models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientDirection")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("client_direction");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("client_phone");

                    b.Property<DateOnly>("OrderDay")
                        .HasColumnType("date")
                        .HasColumnName("order_day");

                    b.HasKey("Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Product_manager.models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_products");
                });

            modelBuilder.Entity("Product_manager.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Handmade Frozen Chicken",
                            Price = 964.64999999999998,
                            Stock = 23
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Licensed Wooden Table",
                            Price = 870.88,
                            Stock = 84
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Ergonomic Plastic Bike",
                            Price = 390.51999999999998,
                            Stock = 73
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Rustic Rubber Table",
                            Price = 237.75999999999999,
                            Stock = 61
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Tasty Rubber Ball",
                            Price = 788.87,
                            Stock = 24
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Fantastic Steel Keyboard",
                            Price = 978.10000000000002,
                            Stock = 34
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Small Rubber Sausages",
                            Price = 377.18000000000001,
                            Stock = 38
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 5,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Unbranded Concrete Pants",
                            Price = 340.61000000000001,
                            Stock = 36
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Small Soft Chair",
                            Price = 60.829999999999998,
                            Stock = 34
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Tasty Rubber Chicken",
                            Price = 996.52999999999997,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("Product_manager.models.OrderProduct", b =>
                {
                    b.HasOne("Product_manager.models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product_manager.models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Product_manager.models.Product", b =>
                {
                    b.HasOne("Product_manager.models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Product_manager.models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Product_manager.models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
